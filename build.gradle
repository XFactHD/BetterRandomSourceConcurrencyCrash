plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.50'
}

version = mod_version
group = 'xfacthd.better_randomsource_concurrency_crash'

base {
    archivesName = 'BetterRandomSourceConcurrencyCrash'
}

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

runs {
    configureEach {
        // Recommended logging data for a userdev environment
        //systemProperty 'forge.logging.markers', 'REGISTRIES'
        // Recommended logging level for the console
        systemProperty 'forge.logging.console.level', 'debug'
        
        modSource project.sourceSets.main
    }
    client {
        workingDirectory project.file('run_client')
    }

    server {
        workingDirectory project.file('run_server')
        programArgument '--nogui'
    }
}

repositories {
    
}

dependencies {
    implementation("net.neoforged:neoforge:${neo_version}")
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
        minecraft_version: minecraft_version,
        minecraft_version_range: minecraft_version_range,
        neo_version: neo_version,
        neo_version_range: neo_version_range,
        loader_version_range: loader_version_range,
        mod_version: mod_version,
        pack_format_number: pack_format_number
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
